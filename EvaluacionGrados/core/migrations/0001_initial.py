# -*- coding: utf-8 -*-
# Generated by Django 1.11.11 on 2018-05-26 00:20
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('codigo_docente', models.CharField(max_length=10)),
                ('cedula', models.CharField(max_length=20)),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CalificacionProyecto',
            fields=[
                ('id_calificacion_proyecto', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('nombre_de_calificacion_proyecto', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Estudiante',
            fields=[
                ('codigo_del_estudiante', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('cedula_del_estudiante', models.CharField(max_length=10, unique=True)),
                ('identificacion', models.CharField(max_length=20, unique=True)),
                ('nombres_del_estudiante', models.CharField(max_length=50)),
                ('apellidos_del_estudiante', models.CharField(max_length=50)),
                ('correo', models.EmailField(max_length=254, unique=True)),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('fecha_sustentacion', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EvaluacionProyecto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activo_para_evaluar', models.BooleanField()),
                ('titulo', models.BooleanField()),
                ('descripcion_del_problema', models.BooleanField()),
                ('hipotesis', models.BooleanField()),
                ('objetivos_generales', models.BooleanField()),
                ('objetivos_especificos', models.BooleanField()),
                ('justificacion', models.BooleanField()),
                ('marco_de_referencia_teorico_y_conceptual', models.BooleanField()),
                ('metodologia', models.BooleanField()),
                ('resultados_esperados', models.BooleanField()),
                ('cronograma_de_actividades', models.BooleanField()),
                ('recursos_o_presupuesto', models.BooleanField()),
                ('literatura_citada', models.BooleanField()),
                ('redaccion_y_ortografia', models.BooleanField()),
                ('pertinencia_con_el_area_de_formacion_del_estudiante', models.BooleanField()),
                ('recomendaciones_observaciones_correciones', models.TextField(blank=True, null=True)),
                ('resultado_consolidado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='evaluacionproyecto_resultado_consolidado', to='core.CalificacionProyecto')),
            ],
        ),
        migrations.CreateModel(
            name='OpcionDeGrado',
            fields=[
                ('id_opcion_grado', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('nombre_opcion_de_grado', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Programa',
            fields=[
                ('id_del_programa', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('nombre_del_programa', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TrabajoGrado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_trabajo_de_grado', models.CharField(max_length=50, unique=True)),
                ('codirector', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trabajogrado_codirector', to=settings.AUTH_USER_MODEL)),
                ('director', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trabajogrado_director', to=settings.AUTH_USER_MODEL)),
                ('estudiante_1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trabajogrado_estudiante1', to='core.Estudiante')),
                ('estudiante_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trabajogrado_estudiante2', to='core.Estudiante')),
                ('jurado_1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trabajogrado_jurado1', to=settings.AUTH_USER_MODEL)),
                ('jurado_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trabajogrado_jurado2', to=settings.AUTH_USER_MODEL)),
                ('opcion_de_grado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.OpcionDeGrado')),
                ('programa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Programa')),
            ],
        ),
        migrations.AddField(
            model_name='evaluacionproyecto',
            name='trabajo_grado',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.TrabajoGrado'),
        ),
        migrations.AddField(
            model_name='estudiante',
            name='programa',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Programa'),
        ),
        migrations.AddField(
            model_name='user',
            name='programa',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Programa'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
